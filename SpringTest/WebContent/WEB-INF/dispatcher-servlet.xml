<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
       
<!-- @Autowired 사용을 위해 -->
    <context:annotation-config/> 
    <mvc:annotation-driven />

    <!-- 자유게시판 -->
    <bean class="Test.Controller.TestController" />
    <bean class="Test.Dao.TestControllerDao" />
    <bean class="Test.Service.impl.TestServiceImpl" />



    <!-- (4) viewResolver(위치)(prefix), 이동할페이지의 확장자를 지정(suffix) -->
<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	<property name="prefix" value="/" />
	<property name="suffix" value=".jsp" />
</bean>
    

<!--     예외페이지 작성
           SimpleMappingExceptionResolver->웹상에서 에러가 발생->개발자가 작성한 예외처리
                                                              페이지를 보여주게 설정이 가능하다.
            <prop key="java.lang.Exception(발생한 예외처리클래스명)">예외처리페이지명</prop>                                                  
       
      
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">pageError</prop>
            </props>
        </property>
    </bean>
    
 -->
    
</beans>


