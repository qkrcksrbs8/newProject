package codingTest;

import java.util.Arrays;

public class Mst {

	//Arrays.sort(arr);								//배열 오름차순 정렬 {1, 2, 3, 4 ...}
	//Arrays.sort(arr,Collections.reverseOrder());	//배열 오름차순 정렬 후 역 순 {4, 3, 2, 1}
	//Arrays.sort(arr, 0, 4); 						//배열 일부만 정렬  - 0,1,2,3 요소만 정렬
	//Arrays.copyOfRange(arr , 0 , 4);				//배열, substring(0,4) 까지 카피
	
	//ArrayList<Integer> list = new ArrayList<Integer>();
	//list.add(3); //값 추가

	//list.remove(1); //index 1 제거
	//list.clear();  //모든 값 제거
	
	
	//str.split(","); //스플릿 - 배열로 나누기
	//String s = java.util.Arrays.toString(ai);// 숫자배열 문자배열로 변환
	
//	LinkedList<Integer> list = new LinkedList<Integer>();
//	list.addFirst(1);//가장 앞에 데이터 추가
//	list.addLast(2);//가장 뒤에 데이터 추가
//	list.add(3);//데이터 추가
//	list.add(1, 10);//index 1뒤에 데이터 10 추가
	
//	LinkedList<Integer> list = new LinkedList<Integer>(Arrays.asList(1,2,3,4,5));
//	list.removeFirst(); //가장 앞의 데이터 제거
//	list.removeLast(); //가장 뒤의 데이터 제거
//	list.remove(); //생략시 0번째 index제거
//	list.remove(1); //index 1 제거
//	list.clear(); //모든 값 제거
	
//	ArrayList<Integer> list = new ArrayList<Integer>(Arrays.asList(1,2,3));
//	System.out.println(list.contains(1)); //list에 1이 있는지 검색 : true
//	System.out.println(list.indexOf(1)); //1이 있는 index반환 없으면 -1
	
	
	
	
	
	
//	HashSet<Integer> set = new HashSet<Integer>(Arrays.asList(1,2,3));//HashSet생성
//	System.out.println(set.contains(1)); //set내부에 값 1이 있는지 check : true
	
	
	
//스트림 이용 n개 증가
//Stream<Integer> iteratedStream = 
//Stream.iterate(30, n -> n + 2).limit(5); // [30, 32, 34, 36, 38]


//종료지점 차이
//	IntStream intStream = IntStream.range(1, 5); // [1, 2, 3, 4]
//	LongStream longStream = LongStream.rangeClosed(1, 5); // [1, 2, 3, 4, 5]



//HashMap에 값 있는지 확인
//	HashMap<String, String> hashMap = new HashMap<String, String>();
//	hashMap.put("A","APPLE");
//	hashMap.containsKey("A");
//	hashMap.containsValue("APPLE");










}
